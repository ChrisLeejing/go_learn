/**
 * This is description.
 *
 * @author Chris0710
 * @date 2021/1/7 10:35
 */
package main

import "fmt"

func main() {
	// 进制:
	// 1. 二进制: 0, 1. 满2进1. 在golang中, 不能使用二进制表示整数.
	// 2. 八进制: 0~7, 满8进1. 以数字0开头进行表示.
	// 3. 十进制: 0~9, 满10进1.
	// 4. 十六进制: 0~9, A~F(不区分大小写), 满16进1. 以0x(小写)或0X(大写)开头进行表示.
	var i int = 5
	fmt.Printf("i的二进制表示: %b\n", i)

	// 八进制: 011 -> 1*8 + 1 = 9
	var j int = 011
	fmt.Printf("j的十进制表示为: %d\n", j)

	// 十六进制: 0x11 -> 1*16 + 1 = 17
	var k int = 0x11
	fmt.Printf("k的十进制表示为: %d\n", k)

	// 进制转换:
	/*
		1. 二进制转十进制: 从最低位开始(右边), 将每个位上的数提取出来, 乘以2的(位数-1)次方, 然后进行求和.
			eg: 将二进制1011转换为十进制.
				1011 = 1 * 2^0 + 1 * 2^1 + 0 * 2^2 + 1 * 2^3 = 1 + 2 + 0 + 8 = 11
		2. 八进制转十进制: 从最低位开始(右边), 将每个位上的数提取出来, 乘以8的(位数-1)次方, 然后进行求和.
			eg: 将八进制0123转换为十进制.
				0123 = 3 * 8^0 + 2 * 8^1 + 1 * 8^2 = 3 + 16 + 64 = 83
		3. 十六进制转十进制: 从最低位开始(右边), 将每个位上的数提取出来, 乘以16的(位数-1)次方, 然后进行求和.
			eg: 将十六进制0x34A转换为十进制.
				0x34A = 10 * 16^0 + 4 * 16^1 + 3 * 16^2 = 10 + 64 + 768 = 842
		4. 十进制转二进制: 将该数不断的除以2, 直到商为0为止, 然后将每步所得的余数反转过来, 就是对应的二进制数.
			eg: 将56转换为二进制数.
		     	56 / 2 = 28, 56 % 2 = 0(余数)
				28 / 2 = 14, 28 % 2 = 0(余数)
				14 / 2 = 7 , 14 % 2 = 0(余数)
				7  / 2 = 3 , 7  % 2 = 1(余数)
				3  / 2 = 1 , 3  % 2 = 1(余数)
				1  / 2 = 0 , 1  % 2 = 1(余数)
			结果: 111000(二进制) = 56(十进制)
		5. 十进制转八进制: 将该数不断的除以8, 直到商为0为止, 然后将每步所得的余数反转过来, 就是对应的八进制数.
			eg: 将156转换为八进制数.
				156 / 8 = 19, 156 % 8 = 4(余数)
				19  / 8 = 2 , 19  % 8 = 3(余数)
				2   / 8 = 0 , 2   % 8 = 2(余数)
			结果: 0234(八进制) = 156(十进制)
		6. 十进制转十六进制: 将该数不断的除以16, 直到商为0为止, 然后将每步所得的余数反转过来, 就是对应的十六进制数.
			eg: 将356转换为十六进制.
				356 / 16 = 22, 356 % 16 = 4(余数)
				22  / 16 = 1 , 22  % 16 = 6(余数)
				1   / 16 = 0 , 1   % 16 = 1(余数)
			结果: 0x164(十六进制) = 356(十进制)
		7. 二进制转八进制: 将二进制数每三位一组(从低位开始组合), 转换成对应的八进制数即可.
			eg: 11010101(二进制)转换为八进制.
				11010101(二进制) -> 11'010'101 -> 0'3'2'5 -> 0325(八进制)
			结果: 11010101(二进制) = 0325(八进制)
		8. 二进制转十六进制: 将二进制数每四位一组(从低位开始组合), 转换成对应的十六进制数即可.
			eg: 11010101(二进制)转换为十六进制.
				11010101(二进制) -> 1101'0101 -> 0x'13'5 -> 0xd5(十六进制)
			结果: 11010101(二进制) = 0xd5(十六进制)
		9. 八进制转二进制: 将八进制数每1位, 转换成对应的一个3位的二进制数即可.
			eg: 0237(八进制)转换为二进制.
				0237(八进制) -> 0'2'3'7 -> '010'011'111' -> 10011111(二进制)
			结果: 0237(八进制) = 10011111(二进制)
		10. 十六进制转二进制: 将十六进制数每1位, 转换成对应的一个4位的二进制数即可.
			eg: 0x237(十六进制)转换为二进制.
				0x237(十六进制) -> 0x'2'3'7' -> '0010'0011'0111' -> 1000110111(二进制)
			结果: 0x237(十六进制) = 1000110111(二进制)
	*/

	// 位运算
	// 原码, 反码, 补码
	// 位运算符, 移位运算符
}
